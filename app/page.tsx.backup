'use client'

import { useState } from 'react'
import { motion } from 'framer-motion'
import { ArrowUp, BookOpen, Zap, Download, GitBranch, Settings, ChevronDown, Code, Sparkles, Rocket, Target } from 'lucide-react'
import { Header } from '@/components/layout/Header'
import { TableOfContents } from '@/components/layout/TableOfContents'
import { SideNavigation } from '@/components/layout/SideNavigation'
import { Button } from '@/components/ui/Button'
import { CodeSnippet } from '@/components/ui/CodeSnippet'
import { SectionNavigation } from '@/components/ui/SectionNavigation'
import { AutoSetup } from '@/components/ui/AutoSetup'

export default function Home() {
  const [isTocOpen, setIsTocOpen] = useState(false)
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const [isSideNavOpen, setIsSideNavOpen] = useState(false)

  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: 'smooth' })
  }

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
      <Header
        onMenuToggle={() => setIsMenuOpen(!isMenuOpen)}
        isMenuOpen={isMenuOpen}
      />

      <div className="flex">
        {/* Side Navigation */}
        <SideNavigation
          isOpen={isSideNavOpen}
          onToggle={() => setIsSideNavOpen(!isSideNavOpen)}
        />

        {/* Table of Contents */}
        <TableOfContents
          isOpen={isTocOpen}
          onClose={() => setIsTocOpen(false)}
        />

        {/* Main Content */}
        <main className="flex-1 pt-16 lg:ml-80">
          {/* Hero Section - Problem Statement */}
          <section id="hero" className="relative overflow-hidden bg-gradient-to-br from-red-50 via-orange-50 to-yellow-50 dark:from-red-900/20 dark:via-orange-900/20 dark:to-yellow-900/20">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                className="text-center"
              >
                <motion.div
                  initial={{ scale: 0 }}
                  animate={{ scale: 1 }}
                  transition={{ delay: 0.2, type: 'spring', stiffness: 200 }}
                  className="w-20 h-20 bg-gradient-to-br from-red-500 to-orange-600 rounded-2xl flex items-center justify-center mx-auto mb-8 shadow-lg"
                >
                  <span className="text-white font-bold text-2xl">🤔</span>
                </motion.div>

                <h1 className="text-5xl md:text-7xl font-bold mb-6">
                  <span className="text-red-600 dark:text-red-400">こんな経験</span>
                  <br />
                  <span className="text-gray-900 dark:text-white">ありませんか？</span>
                </h1>

                {/* Problem Cards */}
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.4 }}
                  className="grid md:grid-cols-2 gap-6 max-w-4xl mx-auto mt-16"
                >
                  {[
                    {
                      emoji: '🤖',
                      title: 'AIが的外れな提案をする',
                      description: 'プロジェクトの構成や使用技術を理解してくれない'
                    },
                    {
                      emoji: '🔄',
                      title: '毎回同じ説明をする',
                      description: 'コーディング規約やプロジェクトルールを毎回説明'
                    },
                    {
                      emoji: '😅',
                      title: '生成コードが微妙',
                      description: '使えないコードが生成されて修正に時間がかかる'
                    },
                    {
                      emoji: '👥',
                      title: 'チームで一貫性がない',
                      description: 'メンバーごとにAIの使い方やルールがバラバラ'
                    },
                  ].map((problem, index) => (
                    <motion.div
                      key={problem.title}
                      initial={{ opacity: 0, x: index % 2 === 0 ? -20 : 20 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ delay: 0.6 + index * 0.1 }}
                      className="bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg border-l-4 border-red-500"
                    >
                      <div className="text-4xl mb-4">{problem.emoji}</div>
                      <h3 className="text-xl font-bold mb-2 text-gray-900 dark:text-white">
                        {problem.title}
                      </h3>
                      <p className="text-gray-600 dark:text-gray-400">
                        {problem.description}
                      </p>
                    </motion.div>
                  ))}
                </motion.div>

                {/* Solution Teaser */}
                <motion.div
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ delay: 1.2 }}
                  className="mt-16 p-8 bg-gradient-to-r from-green-100 to-blue-100 dark:from-green-900/30 dark:to-blue-900/30 rounded-2xl border border-green-200 dark:border-green-700"
                >
                  <h2 className="text-3xl font-bold mb-4 text-green-700 dark:text-green-400">
                    ✨ でも、大丈夫！
                  </h2>
                  <p className="text-xl text-gray-700 dark:text-gray-300 mb-6">
                    これらの問題は<strong>「Cursor」と「Cursor Rules」</strong>で解決できます
                  </p>
                  <Button
                    onClick={() => document.getElementById('what-is-cursor')?.scrollIntoView({ behavior: 'smooth' })}
                    size="lg"
                    className="bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white shadow-lg"
                  >
                    <Sparkles className="w-5 h-5 mr-2" />
                    解決方法を見る
                  </Button>
                </motion.div>
              </motion.div>
            </div>
          </section>

          {/* One Command Setup Section */}
          <section id="one-command-setup" className="py-24 bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="text-center mb-16"
              >
                <div className="w-20 h-20 bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl flex items-center justify-center mx-auto mb-8">
                  <Zap className="w-10 h-10 text-white" />
                </div>
                <h2 className="text-4xl md:text-5xl font-bold mb-6">
                  <span className="gradient-text">ワンコマンド</span>
                  <br />
                  自動設定
                </h2>
                <p className="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
                  このコマンドで一発で最低限の設定が完了します
                </p>
              </motion.div>

              <AutoSetup />
            </div>
          </section>

          {/* What is Cursor Section */}
          <section id="what-is-cursor" className="py-24 bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="text-center mb-16"
              >
                <div className="w-20 h-20 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-2xl flex items-center justify-center mx-auto mb-8">
                  <Code className="w-10 h-10 text-white" />
                </div>
                <h2 className="text-4xl md:text-5xl font-bold mb-6">
                  <span className="gradient-text">Cursor</span>とは？
                </h2>
                <p className="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
                  次世代AI統合開発環境 - あなたのコーディングパートナー
                </p>
              </motion.div>

              {/* 最新機能セクション */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="mb-16"
              >
                <h3 className="text-2xl font-bold mb-8 text-center text-gray-900 dark:text-white">
                  🚀 Cursor 2025年最新機能
                </h3>
                <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {[
                    {
                      icon: '🤖',
                      title: 'Agentモード（最新）',
                      description: 'エンドツーエンドでタスクを完了する自律的AI。Composerで"agent"を選択'
                    },
                    {
                      icon: '🎯',
                      title: '自動コンテキスト取得',
                      description: 'カスタムリトリーバルモデルでコードベースを自動理解'
                    },
                    {
                      icon: '🌐',
                      title: 'Web検索機能',
                      description: '@Webで最新情報を検索し、リアルタイムデータで回答'
                    },
                    {
                      icon: '🖼️',
                      title: '画像チャット対応',
                      description: '画像をドラッグして視覚的なコンテキストでAIと対話'
                    },
                    {
                      icon: '⚡',
                      title: 'マルチライン編集',
                      description: '複数行にわたる編集を一度に提案、時間を大幅短縮'
                    },
                    {
                      icon: '🔄',
                      title: 'エラー自動修正',
                      description: 'lintエラーを自動検知・修正、手動デバッグを削減'
                    }
                  ].map((feature, index) => (
                    <motion.div
                      key={feature.title}
                      initial={{ opacity: 0, y: 10 }}
                      whileInView={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                      viewport={{ once: true }}
                      className="flex items-start space-x-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow-sm"
                    >
                      <span className="text-2xl">{feature.icon}</span>
                      <div>
                        <h4 className="font-bold text-gray-900 dark:text-white">
                          {feature.title}
                        </h4>
                        <p className="text-gray-600 dark:text-gray-400 text-sm">
                          {feature.description}
                        </p>
                      </div>
                    </motion.div>
                  ))}
                </div>
              </motion.div>

              <div className="space-y-8">
                {/* 3つのモード説明 */}
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8 }}
                  viewport={{ once: true }}
                  className="bg-gradient-to-br from-blue-100 to-indigo-100 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-xl p-8 shadow-lg"
                >
                  <h3 className="text-2xl font-bold mb-6 text-center text-gray-900 dark:text-white">
                    🎭 Cursor 3つのAIモード（2025年最新）
                  </h3>
                  <div className="grid md:grid-cols-3 gap-6">
                    {[
                      {
                        mode: 'Chat',
                        icon: '💬',
                        shortcut: 'サイドパネル',
                        description: 'AIアシスタント。コードの説明や推奨事項を提供',
                        usage: '学習・理解・精密な編集',
                        color: 'blue'
                      },
                      {
                        mode: 'Composer',
                        icon: '⚡',
                        shortcut: 'Cmd/Ctrl+I',
                        description: 'コードを直接修正・生成。ファイルを自動作成',
                        usage: 'プロジェクト開始・高速開発',
                        color: 'yellow'
                      },
                      {
                        mode: 'Agent',
                        icon: '🤖',
                        shortcut: 'Composerで選択',
                        description: '完全自律型AI。タスクをエンドツーエンドで完了',
                        usage: '複雑なタスク・初心者向け',
                        color: 'green'
                      }
                    ].map((item, index) => (
                      <motion.div 
                        key={item.mode}
                        initial={{ opacity: 0, y: 20 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ delay: index * 0.1 }}
                        viewport={{ once: true }}
                        className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border-2 border-transparent hover:border-blue-200 dark:hover:border-blue-700 transition-all"
                      >
                        <div className="text-center mb-4">
                          <div className="text-4xl mb-3">{item.icon}</div>
                          <h4 className="font-bold text-xl text-gray-900 dark:text-white">{item.mode}</h4>
                          <div className="text-sm text-gray-500 dark:text-gray-400 mt-1">{item.shortcut}</div>
                        </div>
                        <p className="text-sm text-gray-600 dark:text-gray-400 mb-3 text-center">{item.description}</p>
                        <div className="text-xs font-medium text-center px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">
                          最適: {item.usage}
                        </div>
                      </motion.div>
                    ))}
                  </div>
                </motion.div>

                  {/* 利用可能AIモデル */}
                  <motion.div
                    initial={{ opacity: 0, x: 20 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.8, delay: 0.2 }}
                    viewport={{ once: true }}
                    className="bg-white dark:bg-gray-800 rounded-xl p-8 shadow-lg"
                  >
                    <h3 className="text-2xl font-bold mb-6 text-center text-gray-900 dark:text-white">
                      🧠 利用可能なAIモデル（2025年最新）
                    </h3>
                    <div className="grid md:grid-cols-2 gap-6">
                      <div className="space-y-4">
                        <h4 className="font-bold text-lg text-purple-600 dark:text-purple-400 flex items-center">
                          <span className="text-xl mr-2">🔥</span>
                          コーディング最強
                        </h4>
                        <div className="space-y-3">
                          <div className="p-3 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-700">
                            <div className="font-bold text-green-700 dark:text-green-400">Claude 4 Opus</div>
                            <div className="text-sm text-gray-600 dark:text-gray-400">SWE-bench: 72.5% (世界最高性能)</div>
                            <div className="text-xs text-gray-500 dark:text-gray-500">複雑なコーディング・大規模リファクタリング</div>
                          </div>
                          <div className="p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-700">
                            <div className="font-bold text-blue-700 dark:text-blue-400">Claude 4 Sonnet</div>
                            <div className="text-sm text-gray-600 dark:text-gray-400">SWE-bench: 72.7% (コスパ最強)</div>
                            <div className="text-xs text-gray-500 dark:text-gray-500">日常開発・プロダクション環境</div>
                          </div>
                          <div className="p-3 bg-orange-50 dark:bg-orange-900/20 rounded-lg border border-orange-200 dark:border-orange-700">
                            <div className="font-bold text-orange-700 dark:text-orange-400">GPT-4.1</div>
                            <div className="text-sm text-gray-600 dark:text-gray-400">1M トークン・高速・低価格</div>
                            <div className="text-xs text-gray-500 dark:text-gray-500">大規模ドキュメント解析・API開発</div>
                          </div>
                        </div>
                      </div>
                      <div className="space-y-4">
                        <h4 className="font-bold text-lg text-purple-600 dark:text-purple-400 flex items-center">
                          <span className="text-xl mr-2">🎯</span>
                          特化型モデル
                        </h4>
                        <div className="space-y-3">
                          <div className="p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg border border-purple-200 dark:border-purple-700">
                            <div className="font-bold text-purple-700 dark:text-purple-400">Gemini 2.5 Pro</div>
                            <div className="text-sm text-gray-600 dark:text-gray-400">マルチモーダル最強</div>
                            <div className="text-xs text-gray-500 dark:text-gray-500">画像・動画・創作系開発</div>
                          </div>
                          <div className="p-3 bg-red-50 dark:bg-red-900/20 rounded-lg border border-red-200 dark:border-red-700">
                            <div className="font-bold text-red-700 dark:text-red-400">o3</div>
                            <div className="text-sm text-gray-600 dark:text-gray-400">数学・論理推論特化</div>
                            <div className="text-xs text-gray-500 dark:text-gray-500">アルゴリズム・数式・複雑な論理</div>
                          </div>
                          <div className="p-3 bg-teal-50 dark:bg-teal-900/20 rounded-lg border border-teal-200 dark:border-teal-700">
                            <div className="font-bold text-teal-700 dark:text-teal-400">DeepSeek R1</div>
                            <div className="text-sm text-gray-600 dark:text-gray-400">推論モード・オープンソース</div>
                            <div className="text-xs text-gray-500 dark:text-gray-500">研究・実験・コスト削減</div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div className="mt-6 p-4 bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900/20 dark:to-purple-900/20 rounded-lg">
                      <div className="text-sm text-gray-700 dark:text-gray-300 text-center">
                        <span className="font-semibold">💡 ヒント:</span> 
                        Cursor Rulesを使えば、どのモデルでもあなたのプロジェクトに最適化された結果を得られます！
                      </div>
                    </div>
                  </motion.div>

                  {/* Agent体験例 */}
                  <motion.div
                    initial={{ opacity: 0, x: 20 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.8, delay: 0.4 }}
                    viewport={{ once: true }}
                    className="bg-gray-900 rounded-xl p-6 text-green-400 font-mono text-sm overflow-hidden"
                  >
                    <div className="flex items-center mb-4">
                      <div className="flex space-x-2">
                        <div className="w-3 h-3 bg-red-500 rounded-full"></div>
                        <div className="w-3 h-3 bg-yellow-500 rounded-full"></div>
                        <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                      </div>
                      <span className="ml-4 text-gray-400">Cursor Agent Mode (最新)</span>
                    </div>
                    <div className="space-y-2">
                      <div className="text-blue-400">💬 あなた: "Todoアプリを作って、ダークモードも付けて"</div>
                      <div className="text-yellow-400">🤖 Agent: プロジェクト分析中... @Recommended でコンテキスト取得</div>
                      <div className="text-green-400">🤖 Agent: ✓ 5つのファイルを作成（React + TypeScript）</div>
                      <div className="text-green-400">🤖 Agent: ✓ ダークモード切り替え機能を実装</div>
                      <div className="text-green-400">🤖 Agent: ✓ ローカルストレージでの永続化を追加</div>
                      <div className="text-green-400">🤖 Agent: ✓ レスポンシブデザインを適用</div>
                      <div className="bg-gray-800 p-3 rounded mt-4">
                        <div className="text-purple-400">// 完全に動作するTodoアプリが完成！</div>
                        <div className="text-yellow-400">export const</div>
                        <div className="text-white ml-4">TodoApp</div>
                        <div className="text-white ml-8">{'= () => {'}</div>
                        <div className="text-gray-500 ml-12">{'// フル機能のTodoアプリ + ダークモード'}</div>
                        <div className="text-white ml-8">{'}'}</div>
                      </div>
                    </div>
                  </motion.div>
                </div>
              </div>

              {/* Transition to Cursor Rules */}

            </div>
          </section>

          

          {/* ワンコマンドで適用されるルール詳細解説セクション */}
          <section className="py-20 bg-gradient-to-br from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="text-center mb-16"
              >
                <h2 className="text-4xl md:text-5xl font-bold mb-6">
                  <span className="gradient-text">ワンコマンドで適用される</span><br />
                  <span className="gradient-text">6つのルール</span>
                </h2>
                <p className="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
                  各ルールファイルの内容を詳しく解説。これらがあなたのプロジェクトを最適化します
                </p>
              </motion.div>

              {/* ルールファイル一覧 */}
              <div className="grid lg:grid-cols-2 gap-8 mb-16">
                {/* globals.mdc */}
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8 }}
                  viewport={{ once: true }}
                  className="bg-white dark:bg-gray-800 rounded-xl p-8 shadow-lg border border-gray-200 dark:border-gray-700"
                >
                  <div className="flex items-center mb-6">
                    <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center mr-4">
                      <span className="text-white text-xl">🌐</span>
                    </div>
                    <div>
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">globals.mdc</h3>
                      <p className="text-sm text-gray-500 dark:text-gray-400">プロジェクト全体の基本ルール</p>
                    </div>
                  </div>
                  
                  <div className="space-y-4">
                    <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4">
                      <h4 className="font-bold text-blue-800 dark:text-blue-300 mb-2">🎯 何をするファイル？</h4>
                      <p className="text-sm text-gray-700 dark:text-gray-300">
                        AIに「このプロジェクトの基本的な進め方」を教える司令塔的なファイル。
                        タスクの分析方法から実行手順まで、AIの行動パターンを決定します。
                      </p>
                    </div>
                    
                    <div className="space-y-3">
                      <div className="flex items-start space-x-3">
                        <span className="text-green-500 text-sm mt-1">✅</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">タスク分析の徹底:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">要件を詳細に分析してから実行</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-green-500 text-sm mt-1">✅</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">重複実装の防止:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">既存機能をチェックして無駄を排除</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-green-500 text-sm mt-1">✅</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">品質管理の自動化:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">エラー検証と修正を自動実行</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-green-500 text-sm mt-1">✅</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">UI変更の制限:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">デザインを勝手に変更しない安全機能</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </motion.div>

                {/* uiux.mdc */}
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8, delay: 0.1 }}
                  viewport={{ once: true }}
                  className="bg-white dark:bg-gray-800 rounded-xl p-8 shadow-lg border border-gray-200 dark:border-gray-700"
                >
                  <div className="flex items-center mb-6">
                    <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-600 rounded-xl flex items-center justify-center mr-4">
                      <span className="text-white text-xl">🎨</span>
                    </div>
                    <div>
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">uiux.mdc</h3>
                      <p className="text-sm text-gray-500 dark:text-gray-400">UI/UXデザインの厳格なルール</p>
                    </div>
                  </div>
                  
                  <div className="space-y-4">
                    <div className="bg-purple-50 dark:bg-purple-900/20 rounded-lg p-4">
                      <h4 className="font-bold text-purple-800 dark:text-purple-300 mb-2">🎯 何をするファイル？</h4>
                      <p className="text-sm text-gray-700 dark:text-gray-300">
                        デザインシステムを守るための「デザイン警備員」。
                        AIが勝手にレイアウトや色を変更することを防ぎ、一貫したUI/UXを保証します。
                      </p>
                    </div>
                    
                    <div className="space-y-3">
                      <div className="flex items-start space-x-3">
                        <span className="text-purple-500 text-sm mt-1">🛡️</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">デザイン変更の禁止:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">既存UIの無断変更を完全ブロック</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-purple-500 text-sm mt-1">🎨</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">Tailwind CSS統一:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">ユーティリティクラスで一貫したスタイル</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-purple-500 text-sm mt-1">♿</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">アクセシビリティ:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">WAI-ARIAガイドライン自動適用</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-purple-500 text-sm mt-1">📱</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">レスポンシブ対応:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">モバイルファーストで全デバイス対応</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </motion.div>

                {/* todo.mdc */}
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8, delay: 0.2 }}
                  viewport={{ once: true }}
                  className="bg-white dark:bg-gray-800 rounded-xl p-8 shadow-lg border border-gray-200 dark:border-gray-700"
                >
                  <div className="flex items-center mb-6">
                    <div className="w-12 h-12 bg-gradient-to-r from-green-500 to-teal-600 rounded-xl flex items-center justify-center mr-4">
                      <span className="text-white text-xl">📋</span>
                    </div>
                    <div>
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">todo.mdc</h3>
                      <p className="text-sm text-gray-500 dark:text-gray-400">タスク管理の自動化システム</p>
                    </div>
                  </div>
                  
                  <div className="space-y-4">
                    <div className="bg-green-50 dark:bg-green-900/20 rounded-lg p-4">
                      <h4 className="font-bold text-green-800 dark:text-green-300 mb-2">🎯 何をするファイル？</h4>
                      <p className="text-sm text-gray-700 dark:text-gray-300">
                        プロジェクトの進捗を自動追跡する「秘書AI」。
                        タスクの完了状況を記録し、次にやるべきことを常に把握します。
                      </p>
                    </div>
                    
                    <div className="space-y-3">
                      <div className="flex items-start space-x-3">
                        <span className="text-green-500 text-sm mt-1">📊</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">進捗の自動記録:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">完了タスクを自動でチェック</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-green-500 text-sm mt-1">🔄</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">優先順位管理:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">緊急度に応じたタスク分類</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-green-500 text-sm mt-1">📅</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">定期レビュー:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">日次・週次・月次の振り返り機能</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-green-500 text-sm mt-1">⚠️</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">更新の強制:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">タスク更新を忘れない仕組み</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </motion.div>

                {/* rules.mdc */}
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8, delay: 0.3 }}
                  viewport={{ once: true }}
                  className="bg-white dark:bg-gray-800 rounded-xl p-8 shadow-lg border border-gray-200 dark:border-gray-700"
                >
                  <div className="flex items-center mb-6">
                    <div className="w-12 h-12 bg-gradient-to-r from-orange-500 to-red-600 rounded-xl flex items-center justify-center mr-4">
                      <span className="text-white text-xl">⚙️</span>
                    </div>
                    <div>
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">rules.mdc</h3>
                      <p className="text-sm text-gray-500 dark:text-gray-400">Git自動化とワークフロー</p>
                    </div>
                  </div>
                  
                  <div className="space-y-4">
                    <div className="bg-orange-50 dark:bg-orange-900/20 rounded-lg p-4">
                      <h4 className="font-bold text-orange-800 dark:text-orange-300 mb-2">🎯 何をするファイル？</h4>
                      <p className="text-sm text-gray-700 dark:text-gray-300">
                        Git操作を自動化する「開発効率化マシン」。
                        コミット・プッシュを自動実行し、開発フローを劇的にスピードアップします。
                      </p>
                    </div>
                    
                    <div className="space-y-3">
                      <div className="flex items-start space-x-3">
                        <span className="text-orange-500 text-sm mt-1">🔄</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">自動Git管理:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">ファイル変更時に自動コミット・プッシュ</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-orange-500 text-sm mt-1">📝</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">コミットメッセージ統一:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">一貫したメッセージ形式を自動生成</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-orange-500 text-sm mt-1">🏗️</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">プロジェクト構造:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">ファイル命名規則と整理方法を統一</span>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <span className="text-orange-500 text-sm mt-1">📊</span>
                        <div className="text-sm">
                          <span className="font-semibold text-gray-900 dark:text-white">変更履歴管理:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-1">詳細な変更ログを自動記録</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </motion.div>
              </div>

              {/* dev-rulesフォルダの説明 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.4 }}
                viewport={{ once: true }}
                className="bg-gradient-to-r from-gray-50 to-blue-50 dark:from-gray-800 dark:to-blue-900/20 rounded-xl p-8 border border-gray-200 dark:border-gray-700"
              >
                                 <div className="text-center mb-8">
                   <div className="w-16 h-16 bg-gradient-to-r from-gray-600 to-blue-600 rounded-xl flex items-center justify-center mx-auto mb-4">
                     <span className="text-white text-2xl">📁</span>
                   </div>
                   <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">dev-rules/ フォルダ</h3>
                   <p className="text-gray-600 dark:text-gray-400">チーム開発をスムーズにする3つのお約束</p>
                 </div>

                 <div className="grid md:grid-cols-3 gap-6">
                   {/* coding-standards.mdc */}
                   <div className="bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700">
                     <div className="flex items-center mb-4">
                       <div className="w-10 h-10 bg-blue-100 dark:bg-blue-800 rounded-lg flex items-center justify-center mr-3">
                         <span className="text-blue-600 dark:text-blue-300 text-lg">💻</span>
                       </div>
                       <div>
                         <h4 className="font-bold text-gray-900 dark:text-white text-sm">coding-standards.mdc</h4>
                         <p className="text-xs text-gray-500 dark:text-gray-400">コードの書き方ルール</p>
                       </div>
                     </div>
                     <div className="space-y-2 text-xs">
                       <div className="flex items-start space-x-2">
                         <span className="text-blue-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">ファイル名の付け方を統一</span>
                       </div>
                       <div className="flex items-start space-x-2">
                         <span className="text-blue-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">エラーが起きにくいコードを書く</span>
                       </div>
                       <div className="flex items-start space-x-2">
                         <span className="text-blue-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">問題が起きた時の対処法を統一</span>
                       </div>
                       <div className="flex items-start space-x-2">
                         <span className="text-blue-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">外部ツールの管理方法</span>
                       </div>
                     </div>
                   </div>

                   {/* git-workflow.mdc */}
                   <div className="bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700">
                     <div className="flex items-center mb-4">
                       <div className="w-10 h-10 bg-green-100 dark:bg-green-800 rounded-lg flex items-center justify-center mr-3">
                         <span className="text-green-600 dark:text-green-300 text-lg">🌿</span>
                       </div>
                       <div>
                         <h4 className="font-bold text-gray-900 dark:text-white text-sm">git-workflow.mdc</h4>
                         <p className="text-xs text-gray-500 dark:text-gray-400">変更履歴の管理ルール</p>
                       </div>
                     </div>
                     <div className="space-y-2 text-xs">
                       <div className="flex items-start space-x-2">
                         <span className="text-green-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">作業の種類別にフォルダ分け</span>
                       </div>
                       <div className="flex items-start space-x-2">
                         <span className="text-green-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">変更内容のメモの書き方</span>
                       </div>
                       <div className="flex items-start space-x-2">
                         <span className="text-green-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">チームでの確認・承認の流れ</span>
                       </div>
                       <div className="flex items-start space-x-2">
                         <span className="text-green-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">バージョン番号の付け方</span>
                       </div>
                     </div>
                   </div>

                   {/* testing-guidelines.mdc */}
                   <div className="bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700">
                     <div className="flex items-center mb-4">
                       <div className="w-10 h-10 bg-purple-100 dark:bg-purple-800 rounded-lg flex items-center justify-center mr-3">
                         <span className="text-purple-600 dark:text-purple-300 text-lg">🧪</span>
                       </div>
                       <div>
                         <h4 className="font-bold text-gray-900 dark:text-white text-sm">testing-guidelines.mdc</h4>
                         <p className="text-xs text-gray-500 dark:text-gray-400">動作確認のルール</p>
                       </div>
                     </div>
                     <div className="space-y-2 text-xs">
                       <div className="flex items-start space-x-2">
                         <span className="text-purple-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">小さな部品→全体の順で確認</span>
                       </div>
                       <div className="flex items-start space-x-2">
                         <span className="text-purple-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">準備→実行→確認の3ステップ</span>
                       </div>
                       <div className="flex items-start space-x-2">
                         <span className="text-purple-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">外部サービスの代替手段</span>
                       </div>
                       <div className="flex items-start space-x-2">
                         <span className="text-purple-500 mt-0.5">•</span>
                         <span className="text-gray-600 dark:text-gray-400">自動チェック機能との連携</span>
                       </div>
                     </div>
                   </div>
                 </div>

                <div className="mt-8 text-center">
                  <div className="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 rounded-full text-blue-800 dark:text-blue-200 text-sm font-medium">
                    <span className="mr-2">🚀</span>
                    これら6つのルールが連携して、プロ級の開発環境を自動構築！
                  </div>
                </div>
              </motion.div>
            </div>
          </section>

          {/* .mdcファイル詳細説明セクション */}
          <section className="py-20 bg-white dark:bg-gray-900">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="text-center mb-16"
              >
                <h2 className="text-4xl md:text-5xl font-bold mb-6">
                  <span className="gradient-text">.mdcファイル</span>の正体
                </h2>
                <p className="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
                  「MDC = Markdown Cursor」の略。CursorのAIに指示を与える専用ファイル形式
                </p>
              </motion.div>

              {/* 分かりやすい説明セクション */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="mb-16"
              >
                <div className="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-2xl p-8 border border-blue-200 dark:border-blue-700">
                  <div className="text-center mb-8">
                    <div className="w-16 h-16 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center mx-auto mb-4">
                      <span className="text-2xl">💡</span>
                    </div>
                    <h3 className="text-2xl font-bold text-blue-800 dark:text-blue-300 mb-4">
                      簡単に言うと...
                    </h3>
                  </div>
                  
                  <div className="grid md:grid-cols-3 gap-6 mb-8">
                    <div className="text-center">
                      <div className="w-12 h-12 bg-blue-100 dark:bg-blue-800 rounded-lg flex items-center justify-center mx-auto mb-3">
                        <span className="text-xl">📋</span>
                      </div>
                      <h4 className="font-bold text-gray-900 dark:text-white mb-2">AIへの取扱説明書</h4>
                      <p className="text-sm text-gray-600 dark:text-gray-400">
                        「このプロジェクトでは<br />こうやって作ってね」と教える
                      </p>
                    </div>
                    
                    <div className="text-center">
                      <div className="w-12 h-12 bg-green-100 dark:bg-green-800 rounded-lg flex items-center justify-center mx-auto mb-3">
                        <span className="text-xl">🔄</span>
                      </div>
                      <h4 className="font-bold text-gray-900 dark:text-white mb-2">一度設定すれば永続</h4>
                      <p className="text-sm text-gray-600 dark:text-gray-400">
                        毎回同じ説明をする必要なし<br />AIが自動で覚えてくれる
                      </p>
                    </div>
                    
                    <div className="text-center">
                      <div className="w-12 h-12 bg-purple-100 dark:bg-purple-800 rounded-lg flex items-center justify-center mx-auto mb-3">
                        <span className="text-xl">👨‍💻</span>
                      </div>
                      <h4 className="font-bold text-gray-900 dark:text-white mb-2">プロジェクト専用AI</h4>
                      <p className="text-sm text-gray-600 dark:text-gray-400">
                        あなたのルールを理解した<br />専属プログラマーが誕生
                      </p>
                    </div>
                  </div>
                  
                  <div className="bg-white dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700">
                    <h4 className="font-bold text-gray-900 dark:text-white mb-4 flex items-center">
                      <span className="text-lg mr-2">💬</span>
                      例えば、こんなことをAIに教えられます
                    </h4>
                    <div className="grid md:grid-cols-2 gap-4 text-sm">
                      <div className="space-y-2">
                        <div className="flex items-start">
                          <span className="text-blue-500 mr-2 mt-1">💡</span>
                          <span className="text-gray-700 dark:text-gray-300">「このプロジェクトはWebサイトです」</span>
                        </div>
                        <div className="flex items-start">
                          <span className="text-blue-500 mr-2 mt-1">🎨</span>
                          <span className="text-gray-700 dark:text-gray-300">「デザインを勝手に変更しないで」</span>
                        </div>
                        <div className="flex items-start">
                          <span className="text-blue-500 mr-2 mt-1">📝</span>
                          <span className="text-gray-700 dark:text-gray-300">「コメントは日本語で書いて」</span>
                        </div>
                        <div className="flex items-start">
                          <span className="text-blue-500 mr-2 mt-1">🔧</span>
                          <span className="text-gray-700 dark:text-gray-300">「Reactというツールを使ってます」</span>
                        </div>
                      </div>
                      <div className="space-y-2">
                        <div className="flex items-start">
                          <span className="text-green-500 mr-2 mt-1">✅</span>
                          <span className="text-gray-700 dark:text-gray-300">「テストコードも一緒に作って」</span>
                        </div>
                        <div className="flex items-start">
                          <span className="text-green-500 mr-2 mt-1">📁</span>
                          <span className="text-gray-700 dark:text-gray-300">「ファイル名はこの形式で」</span>
                        </div>
                        <div className="flex items-start">
                          <span className="text-green-500 mr-2 mt-1">🛡️</span>
                          <span className="text-gray-700 dark:text-gray-300">「セキュリティに気をつけて」</span>
                        </div>
                        <div className="flex items-start">
                          <span className="text-green-500 mr-2 mt-1">👥</span>
                          <span className="text-gray-700 dark:text-gray-300">「チーム全員が理解できるように」</span>
                        </div>
                      </div>
                    </div>
                  </div>
                  
                  <div className="mt-6 text-center">
                    <div className="inline-flex items-center px-4 py-2 bg-blue-100 dark:bg-blue-800 rounded-full text-blue-800 dark:text-blue-200 text-sm font-medium">
                      <span className="mr-2">🎯</span>
                      つまり、AIがあなたのプロジェクトを完全に理解した「専属アシスタント」になります！
                    </div>
                  </div>
                </div>
              </motion.div>

              <div className="grid lg:grid-cols-2 gap-12 items-center">
                <motion.div
                  initial={{ opacity: 0, x: -20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.8 }}
                  viewport={{ once: true }}
                >
                  <h3 className="text-2xl font-bold mb-6 text-gray-900 dark:text-white">
                    📁 ファイル配置の仕組み
                  </h3>
                  <div className="bg-gray-100 dark:bg-gray-800 rounded-xl p-6 font-mono text-sm">
                    <div className="text-blue-600 dark:text-blue-400">プロジェクトルート/</div>
                    <div className="ml-4 text-gray-700 dark:text-gray-300">├── .cursor/</div>
                    <div className="ml-8 text-gray-700 dark:text-gray-300">│   └── rules/</div>
                    <div className="ml-12 text-green-600 dark:text-green-400">│       ├── global.mdc</div>
                    <div className="ml-12 text-gray-500 dark:text-gray-500">│       ├── frontend.mdc</div>
                    <div className="ml-12 text-gray-500 dark:text-gray-500">│       └── backend.mdc</div>
                    <div className="ml-4 text-gray-700 dark:text-gray-300">├── technologystack.md</div>
                    <div className="ml-4 text-gray-700 dark:text-gray-300">├── directorystructure.md</div>
                    <div className="ml-4 text-gray-500 dark:text-gray-500">└── src/...</div>
                  </div>
                  
                  <div className="mt-6 space-y-4">
                    {[
                      {
                        title: '.cursor/rules/',
                        description: 'Cursor専用の設定フォルダ。プロジェクト内で自動認識'
                      },
                      {
                        title: 'global.mdc',
                        description: 'プロジェクト全体に適用される基本ルール'
                      },
                      {
                        title: '@ファイル参照',
                        description: 'technologystack.mdなど外部ファイルを@記号で参照可能'
                      }
                    ].map((item, index) => (
                      <motion.div
                        key={item.title}
                        initial={{ opacity: 0, y: 10 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ delay: index * 0.1 }}
                        viewport={{ once: true }}
                        className="flex items-start space-x-3"
                      >
                        <div className="w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0"></div>
                        <div>
                          <span className="font-semibold text-gray-900 dark:text-white">{item.title}:</span>
                          <span className="text-gray-600 dark:text-gray-400 ml-2">{item.description}</span>
                        </div>
                      </motion.div>
                    ))}
                  </div>
                </motion.div>

                <motion.div
                  initial={{ opacity: 0, x: 20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.8 }}
                  viewport={{ once: true }}
                >
                  <h3 className="text-2xl font-bold mb-6 text-gray-900 dark:text-white">
                    📝 .mdcファイルの中身
                  </h3>
                  <p className="text-gray-600 dark:text-gray-400 mb-6">
                    実際のファイルはこんな感じです。難しく見えますが、実は3つの部分に分かれているだけ！
                  </p>
                  
                  <div className="bg-white dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700 mb-6">
                    <div className="flex items-center mb-4">
                      <div className="flex space-x-2">
                        <div className="w-3 h-3 bg-red-500 rounded-full"></div>
                        <div className="w-3 h-3 bg-yellow-500 rounded-full"></div>
                        <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                      </div>
                      <span className="ml-4 text-gray-600 dark:text-gray-400 font-mono text-sm">global.mdc</span>
                    </div>
                    
                    {/* 設定部分 */}
                    <div className="mb-6">
                      <div className="flex items-center mb-2">
                        <span className="w-6 h-6 bg-blue-100 dark:bg-blue-800 rounded-full flex items-center justify-center text-xs font-bold text-blue-600 dark:text-blue-300 mr-2">1</span>
                        <span className="font-bold text-blue-600 dark:text-blue-300">設定部分（どこに適用するか）</span>
                      </div>
                      <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4 font-mono text-sm">
                        <div className="text-gray-500 dark:text-gray-400">---</div>
                        <div className="text-gray-700 dark:text-gray-300">このファイルの説明: "プロジェクト基本ルール"</div>
                        <div className="text-gray-700 dark:text-gray-300">適用範囲: すべてのファイル</div>
                        <div className="text-gray-700 dark:text-gray-300">常に適用: はい</div>
                        <div className="text-gray-500 dark:text-gray-400">---</div>
                      </div>
                    </div>
                    
                    {/* 指示部分 */}
                    <div className="mb-6">
                      <div className="flex items-center mb-2">
                        <span className="w-6 h-6 bg-green-100 dark:bg-green-800 rounded-full flex items-center justify-center text-xs font-bold text-green-600 dark:text-green-300 mr-2">2</span>
                        <span className="font-bold text-green-600 dark:text-green-300">指示部分（AIに何を教えるか）</span>
                      </div>
                      <div className="bg-green-50 dark:bg-green-900/20 rounded-lg p-4">
                        <div className="text-gray-700 dark:text-gray-300 mb-2 font-semibold"># プロジェクトルール</div>
                        <div className="text-gray-600 dark:text-gray-400 text-sm">このプロジェクトでは日本語でコメントを書いてください。</div>
                        <div className="text-gray-600 dark:text-gray-400 text-sm">UIの変更は必ず承認を得てから行ってください。</div>
                        <div className="text-gray-600 dark:text-gray-400 text-sm">テストコードも一緒に作成してください。</div>
                      </div>
                    </div>
                    
                    {/* 参照部分 */}
                    <div>
                      <div className="flex items-center mb-2">
                        <span className="w-6 h-6 bg-purple-100 dark:bg-purple-800 rounded-full flex items-center justify-center text-xs font-bold text-purple-600 dark:text-purple-300 mr-2">3</span>
                        <span className="font-bold text-purple-600 dark:text-purple-300">参照部分（他のファイルを読み込み）</span>
                      </div>
                      <div className="bg-purple-50 dark:bg-purple-900/20 rounded-lg p-4">
                        <div className="text-gray-700 dark:text-gray-300 mb-2 font-semibold"># 参照ファイル</div>
                        <div className="text-purple-600 dark:text-purple-400 font-mono text-sm">@technologystack.md ← 技術情報を読み込み</div>
                        <div className="text-purple-600 dark:text-purple-400 font-mono text-sm">@directorystructure.md ← フォルダ構造を読み込み</div>
                      </div>
                    </div>
                  </div>
                  
                  <div className="space-y-3">
                    <div className="flex items-start space-x-3">
                      <div className="w-6 h-6 bg-blue-100 dark:bg-blue-800 rounded-full flex items-center justify-center text-xs font-bold text-blue-600 dark:text-blue-300 flex-shrink-0 mt-0.5">1</div>
                      <div>
                        <span className="font-semibold text-gray-900 dark:text-white">設定部分</span>
                        <span className="text-gray-600 dark:text-gray-400 ml-2">「このルールをどこに適用するか」を決める部分</span>
                      </div>
                    </div>
                    <div className="flex items-start space-x-3">
                      <div className="w-6 h-6 bg-green-100 dark:bg-green-800 rounded-full flex items-center justify-center text-xs font-bold text-green-600 dark:text-green-300 flex-shrink-0 mt-0.5">2</div>
                      <div>
                        <span className="font-semibold text-gray-900 dark:text-white">指示部分</span>
                        <span className="text-gray-600 dark:text-gray-400 ml-2">「AIにこうしてほしい」という具体的な指示を書く部分</span>
                      </div>
                    </div>
                    <div className="flex items-start space-x-3">
                      <div className="w-6 h-6 bg-purple-100 dark:bg-purple-800 rounded-full flex items-center justify-center text-xs font-bold text-purple-600 dark:text-purple-300 flex-shrink-0 mt-0.5">3</div>
                      <div>
                        <span className="font-semibold text-gray-900 dark:text-white">参照部分</span>
                        <span className="text-gray-600 dark:text-gray-400 ml-2">「他のファイルの情報も使って」という指示部分</span>
                      </div>
                    </div>
                  </div>
                </motion.div>
              </div>
            </div>
          </section>

          {/* Cursor Rules Section */}
          <section id="cursor-rules" className="py-24 bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="text-center mb-16"
              >
                <div className="w-20 h-20 bg-gradient-to-br from-purple-500 to-pink-600 rounded-2xl flex items-center justify-center mx-auto mb-8">
                  <Settings className="w-10 h-10 text-white" />
                </div>
                <h2 className="text-4xl md:text-5xl font-bold mb-6">
                  <span className="gradient-text">Cursor Rules</span>とは？
                </h2>
                <p className="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
                  AIに「あなたのプロジェクトのルール」を教える魔法の設定ファイル<br />
                  <span className="text-lg font-semibold text-purple-600 dark:text-purple-400">Agent、Composer、Chatすべてが自動的に理解！</span>
                </p>
              </motion.div>

              {/* Before/After Comparison */}
              <div className="grid lg:grid-cols-2 gap-8 mb-16">
                {/* Before */}
                <motion.div
                  initial={{ opacity: 0, x: -20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.8 }}
                  viewport={{ once: true }}
                  className="bg-red-50 dark:bg-red-900/20 rounded-xl p-6 border border-red-200 dark:border-red-700"
                >
                  <h3 className="text-xl font-bold mb-4 text-red-700 dark:text-red-400 flex items-center">
                    <span className="text-2xl mr-2">😵</span>
                    Cursor Rules なし
                  </h3>
                  <div className="space-y-3 text-sm">
                    <div className="flex items-center text-red-600 dark:text-red-400">
                      <span className="mr-2">❌</span>
                      プロジェクト構造を理解しない
                    </div>
                    <div className="flex items-center text-red-600 dark:text-red-400">
                      <span className="mr-2">❌</span>
                      一般的すぎるコード生成
                    </div>
                    <div className="flex items-center text-red-600 dark:text-red-400">
                      <span className="mr-2">❌</span>
                      毎回ルールを説明する必要
                    </div>
                    <div className="flex items-center text-red-600 dark:text-red-400">
                      <span className="mr-2">❌</span>
                      チームで統一性がない
                    </div>
                  </div>
                </motion.div>

                {/* After */}
                <motion.div
                  initial={{ opacity: 0, x: 20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.8 }}
                  viewport={{ once: true }}
                  className="bg-green-50 dark:bg-green-900/20 rounded-xl p-6 border border-green-200 dark:border-green-700"
                >
                  <h3 className="text-xl font-bold mb-4 text-green-700 dark:text-green-400 flex items-center">
                    <span className="text-2xl mr-2">✨</span>
                    Cursor Rules あり
                  </h3>
                  <div className="space-y-3 text-sm">
                    <div className="flex items-center text-green-600 dark:text-green-400">
                      <span className="mr-2">✅</span>
                      プロジェクト専用AI
                    </div>
                    <div className="flex items-center text-green-600 dark:text-green-400">
                      <span className="mr-2">✅</span>
                      最適化されたコード生成
                    </div>
                    <div className="flex items-center text-green-600 dark:text-green-400">
                      <span className="mr-2">✅</span>
                      一度設定すれば永続的
                    </div>
                    <div className="flex items-center text-green-600 dark:text-green-400">
                      <span className="mr-2">✅</span>
                      チーム全体で統一された品質
                    </div>
                    <div className="flex items-center text-green-600 dark:text-green-400">
                      <span className="mr-2">✅</span>
                      Agentモードが3倍高速化
                    </div>
                    <div className="flex items-center text-green-600 dark:text-green-400">
                      <span className="mr-2">✅</span>
                      Web検索と画像機能も最適化
                    </div>
                  </div>
                </motion.div>
              </div>

              {/* How it works */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="bg-white dark:bg-gray-800 rounded-xl p-8 shadow-lg"
              >
                <h3 className="text-2xl font-bold mb-6 text-center text-gray-900 dark:text-white">
                  🔮 Cursor Rulesの仕組み
                </h3>
                <div className="grid md:grid-cols-3 gap-6">
                  {[
                    {
                      step: '1',
                      title: 'ルール設定',
                      description: 'プロジェクトのルールをMarkdownファイルに記述',
                      icon: '📝'
                    },
                    {
                      step: '2', 
                      title: 'AI学習',
                      description: 'CursorがルールをAIに適用して理解',
                      icon: '🧠'
                    },
                    {
                      step: '3',
                      title: '最適化',
                      description: 'プロジェクトに特化したコードを生成',
                      icon: '🚀'
                    }
                  ].map((item, index) => (
                    <motion.div
                      key={item.step}
                      initial={{ opacity: 0, y: 20 }}
                      whileInView={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.2 }}
                      viewport={{ once: true }}
                      className="text-center"
                    >
                      <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-600 rounded-full flex items-center justify-center mx-auto mb-4 text-white font-bold text-xl">
                        {item.step}
                      </div>
                      <div className="text-3xl mb-2">{item.icon}</div>
                      <h4 className="font-bold text-lg mb-2 text-gray-900 dark:text-white">
                        {item.title}
                      </h4>
                      <p className="text-gray-600 dark:text-gray-400 text-sm">
                        {item.description}
                      </p>
                    </motion.div>
                  ))}
                </div>
              </motion.div>

              {/* Transition to custom rules */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="mt-16 text-center"
              >
                <div className="bg-gradient-to-r from-indigo-100 to-purple-100 dark:from-indigo-900/30 dark:to-purple-900/30 rounded-xl p-8 border border-indigo-200 dark:border-indigo-700">
                  <h3 className="text-2xl font-bold mb-4 text-indigo-700 dark:text-indigo-400">
                    ⭐ より効果的なCursor Rulesもあります
                  </h3>
                  <p className="text-lg text-gray-700 dark:text-gray-300 mb-6">
                    実際に多くのプロジェクトで活用されている<br />
                    効果実証済みのCursor Rules設定例
                  </p>
                  <Button
                    onClick={() => document.getElementById('setup-custom-rules')?.scrollIntoView({ behavior: 'smooth' })}
                    size="lg"
                    className="bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white"
                  >
                    <Rocket className="w-5 h-5 mr-2" />
                    設定例を見る
                  </Button>
                </div>
              </motion.div>
            </div>
          </section>

          {/* カスタムルールの工夫点詳細 */}
          <section className="py-20 bg-white dark:bg-gray-900">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="text-center mb-16"
              >
                <h2 className="text-4xl md:text-5xl font-bold mb-6">
                  <span className="gradient-text">カスタムルール</span>の工夫
                </h2>
                <p className="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
                  実戦で磨かれたCursor Rulesの設計ポイント<br />
                  <span className="font-semibold text-indigo-600 dark:text-indigo-400">「一貫性のある暴走しないエージェント」を作る仕組み</span>
                </p>
              </motion.div>

              <div className="grid lg:grid-cols-2 gap-12 items-start">
                <motion.div
                  initial={{ opacity: 0, x: -20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.8 }}
                  viewport={{ once: true }}
                >
                  <h3 className="text-2xl font-bold mb-6 text-gray-900 dark:text-white">
                    🎯 カスタムルールの4つの工夫ポイント
                  </h3>
                  
                  <div className="space-y-6">
                    {[
                      {
                        problem: '手戻り防止',
                        solutions: [
                          'モデル・APIバージョンの先祖返り防止',
                          'モジュール・リソースの重複生成防止',
                          '意図しないAIによるデザイン変更防止',
                          'エラー処理の無限ループ防止'
                        ],
                        icon: '🛡️',
                        color: 'text-red-600 dark:text-red-400'
                      },
                      {
                        problem: '分析力向上',
                        solutions: [
                          'Claude 4 Sonnetの本来の分析能力を引き出す',
                          'プロジェクト全体の構造を深く理解',
                          'コンテキストに基づく最適な判断'
                        ],
                        icon: '🧠',
                        color: 'text-blue-600 dark:text-blue-400'
                      },
                      {
                        problem: '自律処理範囲拡大',
                        solutions: [
                          'Cursor Agentの人の介入なしでの自律処理',
                          'Yoloモード最適化',
                          '段階的なタスク完了能力'
                        ],
                        icon: '🤖',
                        color: 'text-green-600 dark:text-green-400'
                      }
                    ].map((item, index) => (
                      <motion.div
                        key={item.problem}
                        initial={{ opacity: 0, y: 10 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ delay: index * 0.1 }}
                        viewport={{ once: true }}
                        className="bg-gray-50 dark:bg-gray-800 rounded-xl p-6"
                      >
                        <div className="flex items-center mb-4">
                          <span className="text-2xl mr-3">{item.icon}</span>
                          <h4 className={`text-lg font-bold ${item.color}`}>
                            {item.problem}
                          </h4>
                        </div>
                        <div className="space-y-2">
                          {item.solutions.map((solution, sIndex) => (
                            <div key={sIndex} className="flex items-start text-sm">
                              <span className="text-gray-400 mr-2 mt-1">•</span>
                              <span className="text-gray-700 dark:text-gray-300">{solution}</span>
                            </div>
                          ))}
                        </div>
                      </motion.div>
                    ))}
                  </div>
                </motion.div>

                <motion.div
                  initial={{ opacity: 0, x: 20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.8 }}
                  viewport={{ once: true }}
                >
                  <h3 className="text-2xl font-bold mb-6 text-gray-900 dark:text-white">
                    🔄 global.mdcの常時参照システム
                  </h3>
                  
                  <div className="bg-indigo-50 dark:bg-indigo-900/20 rounded-xl p-6 border border-indigo-200 dark:border-indigo-700 mb-6">
                    <h4 className="text-lg font-bold mb-4 text-indigo-700 dark:text-indigo-400">
                      なぜglobal.mdcが重要なのか？
                    </h4>
                    <div className="space-y-3 text-sm">
                      <div className="flex items-start">
                        <span className="text-green-500 mr-2 mt-1">✓</span>
                        <span className="text-gray-700 dark:text-gray-300">
                          <strong>毎回参照される基本ルール:</strong> 全てのAI操作で自動的に読み込まれ、一貫性を保持
                        </span>
                      </div>
                      <div className="flex items-start">
                        <span className="text-green-500 mr-2 mt-1">✓</span>
                        <span className="text-gray-700 dark:text-gray-300">
                          <strong>UI/UXを壊さないルール:</strong> デザインシステムやコンポーネント構造を維持
                        </span>
                      </div>
                      <div className="flex items-start">
                        <span className="text-green-500 mr-2 mt-1">✓</span>
                        <span className="text-gray-700 dark:text-gray-300">
                          <strong>TODOアプリ等の例:</strong> 具体的な実装パターンで暴走を防止
                        </span>
                      </div>
                    </div>
                  </div>

                  <div className="bg-gray-900 rounded-xl p-6 text-sm overflow-hidden">
                    <div className="flex items-center mb-4">
                      <div className="flex space-x-2">
                        <div className="w-3 h-3 bg-red-500 rounded-full"></div>
                        <div className="w-3 h-3 bg-yellow-500 rounded-full"></div>
                        <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                      </div>
                      <span className="ml-4 text-gray-400">global.mdc構造</span>
                    </div>
                    <div className="space-y-2 text-gray-300">
                      <div className="text-yellow-400">---</div>
                      <div><span className="text-blue-400">description:</span> <span className="text-green-400">"プロジェクト基本ルール"</span></div>
                      <div><span className="text-blue-400">alwaysApply:</span> <span className="text-orange-400">true</span></div>
                      <div className="text-yellow-400">---</div>
                      <div className="mt-4 text-gray-400"># 手戻り防止システム</div>
                      <div className="text-gray-300">- APIバージョン固定指示</div>
                      <div className="text-gray-300">- 重複検出ルール</div>
                      <div className="text-gray-400"># UI/UX保護ルール</div>
                      <div className="text-gray-300">- デザインシステム遵守</div>
                      <div className="text-gray-300">- コンポーネント構造維持</div>
                      <div className="text-gray-400"># 分析力向上指示</div>
                      <div className="text-gray-300">- Claude 4 Sonnet最適化</div>
                      <div className="text-gray-400"># 参照ファイル</div>
                      <div className="text-purple-400">@technologystack.md</div>
                      <div className="text-purple-400">@directorystructure.md</div>
                    </div>
                  </div>

                  <div className="mt-6 p-4 bg-amber-50 dark:bg-amber-900/20 rounded-lg border border-amber-200 dark:border-amber-700">
                    <p className="text-sm text-amber-700 dark:text-amber-300">
                      <strong>🎯 結果:</strong> Agentが暴走せず、プロジェクトのルールを完全に理解して
                      一貫性のある高品質なコードを生成し続けます。
                    </p>
                  </div>
                </motion.div>
              </div>
            </div>
          </section>

          {/* Custom Rules Operation */}
          <section id="custom-rules" className="py-24 bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="text-center mb-16"
              >
                <div className="w-20 h-20 bg-gradient-to-br from-purple-500 to-pink-600 rounded-2xl flex items-center justify-center mx-auto mb-8">
                  <Settings className="w-10 h-10 text-white" />
                </div>
                <h2 className="text-4xl md:text-5xl font-bold mb-6">
                  <span className="gradient-text">カスタムルール運用</span>
                  <br />
                  実践ガイド
                </h2>
                <p className="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
                  チーム開発で効果的なCursor Rules運用戦略
                </p>
                <div className="mt-8 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-700 inline-block">
                  <p className="text-sm text-blue-700 dark:text-blue-300">
                    📚 参考: <a href="https://zenn.dev/kikagaku/articles/2d3752f773aa34" target="_blank" rel="noopener noreferrer" className="underline hover:text-blue-600">
                      株式会社キカガク「組織のための Cursor Rules 運用」
                    </a>
                  </p>
                </div>
              </motion.div>

              {/* Rule Types Classification */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="mb-16"
              >
                <h3 className="text-3xl font-bold mb-8 text-center text-gray-900 dark:text-white">
                  📋 Rule Type の分類と活用法
                </h3>
                
                <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
                  {[
                    {
                      type: 'Always',
                      title: '常時適用',
                      description: '全てのAI操作で自動適用',
                      examples: ['コーディング規約', 'プロジェクト構成', 'セキュリティルール'],
                      color: 'from-red-500 to-red-600',
                      icon: '🔴'
                    },
                    {
                      type: 'Auto Attached',
                      title: '自動付与',
                      description: 'ファイル種別で自動適用',
                      examples: ['React用ルール', 'API用ルール', 'テスト用ルール'],
                      color: 'from-blue-500 to-blue-600', 
                      icon: '🔵'
                    },
                    {
                      type: 'Agent Requested',
                      title: 'Agent要求',
                      description: 'Agentモードで自動適用',
                      examples: ['デバッグルール', 'リファクタルール', 'パフォーマンス最適化'],
                      color: 'from-green-500 to-green-600',
                      icon: '🟢'
                    },
                    {
                      type: 'Manual',
                      title: '手動適用',
                      description: '@filename で手動指定',
                      examples: ['特殊要件', 'レガシー対応', '実験的ルール'],
                      color: 'from-yellow-500 to-yellow-600',
                      icon: '🟡'
                    }
                  ].map((ruleType, index) => (
                    <motion.div
                      key={ruleType.type}
                      initial={{ opacity: 0, y: 20 }}
                      whileInView={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                      viewport={{ once: true }}
                      className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg border-t-4"
                      style={{ borderTopImage: `linear-gradient(to right, ${ruleType.color.split(' ')[1]}, ${ruleType.color.split(' ')[3]})` }}
                    >
                      <div className="flex items-center mb-4">
                        <span className="text-2xl mr-3">{ruleType.icon}</span>
                        <div>
                          <h4 className="text-lg font-bold text-gray-900 dark:text-white">
                            {ruleType.title}
                          </h4>
                          <p className="text-sm text-gray-500 dark:text-gray-400">
                            {ruleType.type}
                          </p>
                        </div>
                      </div>
                      <p className="text-sm text-gray-600 dark:text-gray-400 mb-4">
                        {ruleType.description}
                      </p>
                      <div className="space-y-2">
                        <p className="text-xs font-semibold text-gray-700 dark:text-gray-300">適用例:</p>
                        {ruleType.examples.map((example, i) => (
                          <div key={i} className="flex items-start text-xs">
                            <span className="text-gray-400 mr-2 mt-1">•</span>
                            <span className="text-gray-600 dark:text-gray-400">{example}</span>
                          </div>
                        ))}
                      </div>
                    </motion.div>
                  ))}
                </div>
              </motion.div>

              {/* Custom Commands */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="mb-16"
              >
                <h3 className="text-3xl font-bold mb-8 text-center text-gray-900 dark:text-white">
                  🎯 カスタムコマンドの設定
                </h3>
                
                <div className="bg-white dark:bg-gray-800 rounded-xl p-8 shadow-lg">
                  <p className="text-gray-600 dark:text-gray-400 mb-6">
                    決まった手順を効率化するために、カスタムコマンドを設定しましょう。
                  </p>
                  
                  <div className="grid md:grid-cols-2 gap-8">
                    <div>
                      <h4 className="text-xl font-bold mb-4 text-gray-900 dark:text-white">
                        よく使われるカスタムコマンド
                      </h4>
                      <div className="space-y-4">
                        {[
                          { cmd: '/pr', desc: 'Pull Requestを作成する', use: 'コミット後の自動PR作成' },
                          { cmd: '/test', desc: 'テストコードを生成する', use: '関数のユニットテスト作成' },
                          { cmd: '/doc', desc: 'ドキュメントを生成する', use: 'API仕様書やREADME作成' },
                          { cmd: '/fix', desc: 'バグを修正する', use: 'エラー解析と修正案提案' },
                          { cmd: '/refactor', desc: 'リファクタリングする', use: 'コード品質向上' }
                        ].map((command, index) => (
                          <div key={command.cmd} className="border-l-4 border-blue-500 pl-4">
                            <div className="flex items-center mb-1">
                              <code className="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded text-sm font-mono">
                                {command.cmd}
                              </code>
                            </div>
                            <p className="text-sm font-medium text-gray-900 dark:text-white">{command.desc}</p>
                            <p className="text-xs text-gray-500 dark:text-gray-400">{command.use}</p>
                          </div>
                        ))}
                      </div>
                    </div>
                    
                    <div>
                      <h4 className="text-xl font-bold mb-4 text-gray-900 dark:text-white">
                        設定例: /pr コマンド
                      </h4>
                      <CodeSnippet
                        code={`---
description: "PR作成コマンド"
trigger: "/pr"
---

# Pull Request作成手順

以下の手順でPRを作成してください：

1. 現在のブランチの変更をコミット
2. develop ブランチの最新を取得
3. コンフリクトがあれば解決
4. PR タイトルと説明を自動生成
   - タイトル: [種別] 簡潔な変更内容
   - 説明: 変更内容、影響範囲、テスト方法
5. GitHubでPRを作成

## チェックリスト
- [ ] テストが通ること
- [ ] lintエラーがないこと  
- [ ] 破壊的変更がある場合は明記すること`}
                        language="markdown"
                      />
                    </div>
                  </div>
                </div>
              </motion.div>

              {/* Team Operation Strategy */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="mb-16"
              >
                <h3 className="text-3xl font-bold mb-8 text-center text-gray-900 dark:text-white">
                  👥 チーム運用戦略
                </h3>
                
                <div className="bg-gradient-to-r from-green-50 to-blue-50 dark:from-green-900/20 dark:to-blue-900/20 rounded-xl p-8 border border-green-200 dark:border-green-700">
                  <div className="grid md:grid-cols-2 gap-8">
                    <div>
                      <h4 className="text-xl font-bold mb-4 text-green-700 dark:text-green-400">
                        ✅ 推奨アプローチ
                      </h4>
                      <div className="space-y-4">
                        {[
                          {
                            title: '静的解析を優先',
                            desc: 'ESLint等で対応可能なルールは静的解析で実装'
                          },
                          {
                            title: '段階的導入',
                            desc: '.local.mdcで個人テスト → チーム共有 → 本採用'
                          },
                          {
                            title: '効果測定',
                            desc: 'ルール導入前後でコード品質や生産性を定量評価'
                          },
                          {
                            title: 'コンテキスト最適化',
                            desc: '不要な情報を削除し、AIに必要最小限の情報を提供'
                          }
                        ].map((item, index) => (
                          <div key={index} className="flex items-start">
                            <span className="text-green-500 mr-3 mt-1">✓</span>
                            <div>
                              <p className="font-medium text-gray-900 dark:text-white">{item.title}</p>
                              <p className="text-sm text-gray-600 dark:text-gray-400">{item.desc}</p>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                    
                    <div>
                      <h4 className="text-xl font-bold mb-4 text-red-700 dark:text-red-400">
                        ❌ 避けるべきアンチパターン
                      </h4>
                      <div className="space-y-4">
                        {[
                          {
                            title: '過度な詳細化',
                            desc: 'AIが理解しないレベルの細かすぎるルール設定'
                          },
                          {
                            title: '一括導入',
                            desc: '既存のコーディング規約を全てRulesに移行'
                          },
                          {
                            title: '検証なし運用',
                            desc: 'ルールの効果を確認せずに継続使用'
                          },
                          {
                            title: 'コンテキスト汚染',
                            desc: '不要な情報でAIの判断力を低下させる'
                          }
                        ].map((item, index) => (
                          <div key={index} className="flex items-start">
                            <span className="text-red-500 mr-3 mt-1">✗</span>
                            <div>
                              <p className="font-medium text-gray-900 dark:text-white">{item.title}</p>
                              <p className="text-sm text-gray-600 dark:text-gray-400">{item.desc}</p>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              </motion.div>

              {/* Local Testing */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="mb-16"
              >
                <h3 className="text-3xl font-bold mb-8 text-center text-gray-900 dark:text-white">
                  🧪 ローカルテスト手法
                </h3>
                
                <div className="bg-white dark:bg-gray-800 rounded-xl p-8 shadow-lg">
                  <p className="text-gray-600 dark:text-gray-400 mb-6">
                    新しいルールをチームに展開する前に、個人環境でテストしましょう。
                  </p>
                  
                  <div className="grid md:grid-cols-2 gap-8">
                    <div>
                      <h4 className="text-xl font-bold mb-4 text-gray-900 dark:text-white">
                        📝 .local.mdc の活用
                      </h4>
                      <div className="space-y-4">
                        <div className="bg-yellow-50 dark:bg-yellow-900/20 p-4 rounded-lg border border-yellow-200 dark:border-yellow-700">
                          <p className="text-sm text-yellow-700 dark:text-yellow-300 mb-2">
                            <strong>設定手順:</strong>
                          </p>
                          <ol className="text-sm text-yellow-700 dark:text-yellow-300 space-y-1">
                            <li>1. .gitignoreに<code>*.local.mdc</code>を追加</li>
                            <li>2. <code>experimental-rule.local.mdc</code>を作成</li>
                            <li>3. 個人環境でテスト運用</li>
                            <li>4. 効果確認後、チーム展開検討</li>
                          </ol>
                        </div>
                        
                        <CodeSnippet
                          code={`# .gitignore に追加
*.local.mdc

# 個人テスト用ルール作成
touch .cursor/rules/test-feature.local.mdc`}
                          language="bash"
                        />
                      </div>
                    </div>
                    
                    <div>
                      <h4 className="text-xl font-bold mb-4 text-gray-900 dark:text-white">
                        📊 効果測定項目
                      </h4>
                      <div className="space-y-3">
                        {[
                          '🎯 コード生成精度の向上',
                          '⚡ 開発速度の改善',
                          '🐛 バグ発生率の減少',
                          '🔄 修正回数の削減',
                          '📚 コード可読性の向上',
                          '🤝 チーム内一貫性の確保'
                        ].map((metric, index) => (
                          <div key={index} className="flex items-center">
                            <span className="mr-3">{metric.split(' ')[0]}</span>
                            <span className="text-gray-700 dark:text-gray-300">
                              {metric.split(' ').slice(1).join(' ')}
                            </span>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              </motion.div>
            </div>
          </section>

          {/* Custom Rules Setup */}
          <section id="setup-custom-rules" className="py-24 bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="text-center mb-16"
              >
                <div className="w-20 h-20 bg-gradient-to-br from-purple-500 to-pink-600 rounded-2xl flex items-center justify-center mx-auto mb-8">
                  <Rocket className="w-10 h-10 text-white" />
                </div>
                <h2 className="text-4xl md:text-5xl font-bold mb-6">
                  <span className="gradient-text">カスタムルール</span>
                  <br />
                  セットアップ
                </h2>
                <p className="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
                  実戦で磨かれたCursor Rules - 高度な設定とカスタマイズ
                </p>
              </motion.div>

              <div className="bg-white dark:bg-gray-800 rounded-xl p-8 shadow-lg">
                <h3 className="text-2xl font-bold mb-6 text-center text-gray-900 dark:text-white">
                  🔧 高度なカスタマイズ
                </h3>
                <p className="text-gray-600 dark:text-gray-400 text-center mb-8">
                  基本設定が完了したら、プロジェクト固有のルールをカスタマイズしましょう。
                </p>
                <div className="grid md:grid-cols-2 gap-8">
                  <div className="space-y-4">
                    <h4 className="text-lg font-bold text-gray-900 dark:text-white">
                      📝 プロジェクト固有ルール
                    </h4>
                    <ul className="space-y-2 text-gray-600 dark:text-gray-400">
                      <li>• フレームワーク特化設定</li>
                      <li>• チーム独自のコーディング規約</li>
                      <li>• プロジェクト構造の最適化</li>
                      <li>• 業界特有の要件対応</li>
                    </ul>
                  </div>
                  <div className="space-y-4">
                    <h4 className="text-lg font-bold text-gray-900 dark:text-white">
                      🎯 効果測定と改善
                    </h4>
                    <ul className="space-y-2 text-gray-600 dark:text-gray-400">
                      <li>• コード品質の定量評価</li>
                      <li>• 開発速度の向上測定</li>
                      <li>• チーム内一貫性の確保</li>
                      <li>• 継続的な改善サイクル</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </section>

          {/* Footer CTA */}
          <section className="py-24 bg-gradient-to-br from-gray-900 to-black text-white">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
              >
                <h2 className="text-4xl md:text-5xl font-bold mb-6">
                  🎉 これで完璧！
                </h2>
                <p className="text-xl text-gray-300 mb-8 max-w-3xl mx-auto">
                  カスタムCursor Rulesで、開発効率がアップします。<br />
                  チーム全体で一貫した高品質なコードを生成しましょう。
                </p>
                <div className="flex flex-col sm:flex-row gap-4 justify-center">
                  <Button
                    onClick={() => document.getElementById('one-command-setup')?.scrollIntoView({ behavior: 'smooth' })}
                    size="lg"
                    className="bg-white text-black hover:bg-gray-100"
                  >
                    <Zap className="w-5 h-5 mr-2" />
                    ワンコマンド設定
                  </Button>
                  <Button
                    onClick={() => setIsTocOpen(true)}
                    variant="outline"
                    size="lg"
                    className="border-white text-white hover:bg-white hover:text-black"
                  >
                    <BookOpen className="w-5 h-5 mr-2" />
                    詳細ガイドを見る
                  </Button>
                </div>
              </motion.div>
            </div>
          </section>

          {/* Navigation */}
          <SectionNavigation />

          {/* Scroll to top */}
          <motion.button
            onClick={scrollToTop}
            className="fixed bottom-8 right-8 bg-primary-600 hover:bg-primary-700 text-white p-3 rounded-full shadow-lg z-50 transition-colors"
            whileHover={{ scale: 1.1 }}
            whileTap={{ scale: 0.9 }}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 1 }}
          >
            <ArrowUp className="w-6 h-6" />
          </motion.button>
        </main>
      </div>
    </div>
  )
} 